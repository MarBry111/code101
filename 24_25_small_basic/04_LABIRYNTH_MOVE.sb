' Ustawienia okna i kolory
GraphicsWindow.BackgroundColor = "White"
GraphicsWindow.BrushColor = "Blue"
GraphicsWindow.Title = "Maze Movement"

' Parametry siatki
cellSize = 40
gridWidth = 10
gridHeight = 10

' Definicja labiryntu: 0 - droga, 1 - Å›ciana
row[1] = "0111111111"
row[2] = "0000010001"
row[3] = "1111010101"
row[4] = "1000010101"
row[5] = "1011110101"
row[6] = "1000000101"
row[7] = "1111111101"
row[8] = "1000000001"
row[9] = "1011111101"
row[10]= "1000000000"

' Rysowanie labiryntu
Sub RysujLabirynt
  For y = 1 To gridHeight
    wzorzec = row[y]
    For x = 1 To gridWidth
      pole = Text.GetSubText(wzorzec, x, 1)
      xPix = (x - 1) * cellSize
      yPix = (y - 1) * cellSize

      If (pole = "1") Then
        GraphicsWindow.BrushColor = "Black"
      Else
        GraphicsWindow.BrushColor = "LightGray"
      EndIf
      GraphicsWindow.FillRectangle(xPix, yPix, cellSize, cellSize)
    EndFor
  EndFor
EndSub

' Set player position
playerX = 0
playerY = 0

RysujLabirynt()
GraphicsWindow.BrushColor = "Blue"
GraphicsWindow.FillRectangle(playerX, playerY, cellSize, cellSize)
GraphicsWindow.KeyDown = Ruch

Sub Ruch
  RysujLabirynt()
  GraphicsWindow.BrushColor = "Blue"
  key = GraphicsWindow.LastKey
  
  ' Store current position
  oldX = playerX
  oldY = playerY
  
  ' Move player based on key press
  If (key = "Up") Then
    playerY = playerY - cellSize
  ElseIf (key = "Down") Then
    playerY = playerY + cellSize
  ElseIf (key = "Left") Then
    playerX = playerX - cellSize
  ElseIf (key = "Right") Then
    playerX = playerX + cellSize
  EndIf
  
  ' Check if the move is valid (within bounds)
  If (playerX < 0 Or playerX > (gridWidth-1)*cellSize Or playerY < 0 Or playerY > (gridHeight-1)*cellSize) Then
    ' Out of bounds, revert move
    playerX = oldX
    playerY = oldY
  EndIf
  
  GraphicsWindow.FillRectangle(playerX, playerY, cellSize, cellSize)
EndSub
